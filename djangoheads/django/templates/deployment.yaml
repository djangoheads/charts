apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ include "common.names.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  selector:
    matchLabels:
      service: {{ include "common.names.fullname" . }}-deployment
  {{- if .Values.updateStrategy }}
  strategy: {{- toYaml .Values.updateStrategy | nindent 4 }}
  {{- end }}
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  template:
    metadata:
      labels:
        service: {{ include "common.names.fullname" . }}-deployment
      {{- with .Values.podLabels }}
      {{ toYaml .| indent 2 }}
      {{- end }}
      annotations:
        previousImg: {{ ( index ( lookup "apps/v1" "Deployment" .Release.Namespace (include "common.names.fullname" . ) ).spec.template.spec.containers 0).image }}
    spec:
      {{- include "django.imagePullSecrets" . | indent 6 }}
      {{- if .Values.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ include "common.names.fullname" . }}-container
          env:
          {{- if .Values.djangoConfig }}
          {{- range $k, $v := .Values.djangoConfig }}
          - name: {{ $k }}
            value: {{ if typeIs "string" $v }}{{ tpl $v $ | quote }}{{ else }}{{ tpl ($v | toYaml) $ | quote }}{{ end }}
          {{- end }}
          {{- end }}
          image: {{ or ( include "django.image" . ) ( index ( lookup "apps/v1" "Deployment" .Release.Namespace (include "common.names.fullname" . ) ).spec.template.spec.containers 0).image }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
{{- if .Values.command }}
          command:
{{ toYaml .Values.command | indent 12 }}
{{- end }}
{{- if .Values.args }}
          args:
{{ toYaml .Values.args | indent 12 }}
{{- end }}
          ports:
            {{- if .Values.containerPort }}
            - containerPort: {{ .Values.containerPort }}
              protocol: TCP
            {{- end }}
          {{- if .Values.enableLivenessProbe }}
          {{- if .Values.customLivenessProbe }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.customLivenessProbe "context" $) | nindent 12 }}
          {{- else if .Values.livenessProbe.enabled }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.livenessProbe "enabled" "path") "context" $) | nindent 12 }}
            httpGet:
              path: {{ .Values.livenessProbe.path }}
              port: http
          {{- end }}
          {{- if .Values.customReadinessProbe }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.customReadinessProbe "context" $) | nindent 12 }}
          {{- else if .Values.readinessProbe.enabled }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.readinessProbe "enabled" "path") "context" $) | nindent 12 }}
            httpGet:
              path: {{ .Values.readinessProbe.path }}
              port: http
          {{- end }}
          {{- end }}
          envFrom:
{{- with .Values.envs }}
{{ toYaml .| indent 12 }}
{{- end }}
          volumeMounts:
{{ if .Values.volumeMounts -}}
{{ toYaml .Values.volumeMounts | trim | indent 12 }}
{{- end }}
          resources:
{{ toYaml .Values.resources | trim | indent 12 }}
      restartPolicy: Always
{{- if .Values.imagePullSecrets }}
      imagePullSecrets:
      - name: {{ .Values.imagePullSecrets | quote }}
{{- end }}
      volumes:
{{ if .Values.volumes -}}
{{ toYaml .Values.volumes | trim | indent 8 }}
{{- end }}